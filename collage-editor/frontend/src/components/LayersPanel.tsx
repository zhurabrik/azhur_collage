import { Box, List, ListItem, Typography, Paper, IconButton } from "@mui/material";
import { useEditorStore } from "../store/useEditorStore";
import { fabric } from "fabric";
import { ArrowUpward, ArrowDownward } from "@mui/icons-material";

const LayersPanel = () => {
  const { canvas, layers, setLayers, selectedObject } = useEditorStore();

  // üîπ –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Å–ª–æ—è
  const getLayerName = (layer: fabric.Object) => {
    if (layer instanceof fabric.Image && layer.getSrc()) {
      return layer.getSrc().split("/").pop() || "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"; // ‚úÖ –ò–º—è —Ñ–∞–π–ª–∞
    }
    if (layer instanceof fabric.Textbox) {
      return layer.text?.length ? layer.text.slice(0, 20) + "..." : "–¢–µ–∫—Å—Ç"; // ‚úÖ –û–±—Ä–µ–∑–∫–∞ —Ç–µ–∫—Å—Ç–∞
    }
    return "–û–±—ä–µ–∫—Ç";
  };

  // üîπ –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è —Å–ª–æ—è
  const moveLayer = (index: number, direction: "up" | "down") => {
    if (!canvas) return;
    const newLayers = [...layers];
  
    const targetIndex = direction === "up" ? index - 1 : index + 1;
    if (targetIndex < 0 || targetIndex >= layers.length) return; // üî• –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã
  
    // –ú–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ
    const movedObject = newLayers[index];
    newLayers[index] = newLayers[targetIndex];
    newLayers[targetIndex] = movedObject;
  
    // üî• –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ Fabric.js
    newLayers.forEach((obj, i) => {
      canvas.moveTo(obj, layers.length - 1 - i); // üìå –í Fabric.js –≤–µ—Ä—Ö–Ω–∏–π —Å–ª–æ–π ‚Äî —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∏–Ω–¥–µ–∫—Å–æ–º
    });
  
    setLayers(newLayers);
    canvas.renderAll();
  };
  

  return (
    <Paper
      elevation={3}
      sx={{
        width: "100%", // ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —à–∏—Ä–∏–Ω–∞
        p: 2,
        bgcolor: "background.paper",
        overflowY: "auto", // ‚úÖ –°–∫—Ä–æ–ª–ª –ø—Ä–∏ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–∏
        maxHeight: "100%", // ‚úÖ –ù–µ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã
      }}
    >
      <Typography variant="h6">üìÇ –°–ª–æ–∏</Typography>
      <List sx={{ maxHeight: "100%", overflow: "auto" }}>
        {layers.map((layer, index) => (
          <ListItem
            key={index}
            sx={{
              display: "flex",
              alignItems: "center",
              justifyContent: "space-between",
              cursor: "pointer",
              bgcolor: layer === selectedObject ? "#d0f0ff" : "transparent", // ‚úÖ –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ª–æ—è
              "&:hover": { bgcolor: "#f0f0f0" },
            }}
          >
            {getLayerName(layer)}

            <Box>
              <IconButton size="small" onClick={() => moveLayer(index, "up")} disabled={index === 0}>
                <ArrowUpward fontSize="small" />
              </IconButton>
              <IconButton size="small" onClick={() => moveLayer(index, "down")} disabled={index === layers.length - 1}>
                <ArrowDownward fontSize="small" />
              </IconButton>
            </Box>
          </ListItem>
        ))}
      </List>
    </Paper>
  );
};

export default LayersPanel;
