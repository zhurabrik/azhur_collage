import { useState } from "react";
import { List, ListItem, Typography, Paper, IconButton, TextField, Box } from "@mui/material";
import { useEditorStore } from "../store/useEditorStore";
import { fabric } from "fabric";
import { ArrowUpward, ArrowDownward, Edit } from "@mui/icons-material";

const LayersPanel = () => {
  const { canvas, layers, setLayers, selectedObject } = useEditorStore();
  const [renamingLayer, setRenamingLayer] = useState<fabric.Object | null>(null);
  const [newName, setNewName] = useState("");

  // üîπ –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Å–ª–æ—è
  const getLayerName = (layer: fabric.Object) => {
    if (layer instanceof fabric.Image && layer.name) {
      return layer.name; // ‚úÖ –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω–æ–µ –∏–º—è, –µ—Å–ª–∏ –µ—Å—Ç—å
    }
    if (layer instanceof fabric.Textbox) {
      return layer.text?.length ? layer.text.slice(0, 20) + "..." : "–¢–µ–∫—Å—Ç"; // ‚úÖ –û–±—Ä–µ–∑–∫–∞ —Ç–µ–∫—Å—Ç–∞
    }
    return "–û–±—ä–µ–∫—Ç";
  };

  // üîπ –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è —Å–ª–æ—è
  const moveLayer = (index: number, direction: "up" | "down") => {
    if (!canvas) return;
    const newLayers = [...layers];

    const targetIndex = direction === "up" ? index - 1 : index + 1;
    if (targetIndex < 0 || targetIndex >= layers.length) return; // üî• –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã

    // –ú–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ
    [newLayers[index], newLayers[targetIndex]] = [newLayers[targetIndex], newLayers[index]];

    // üî• –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–µ–∫ –≤ Fabric.js
    newLayers.forEach((obj, i) => {
      canvas.moveTo(obj, layers.length - 1 - i);
    });

    setLayers(newLayers);
    canvas.renderAll();
  };

  // üîπ –ù–∞—á–∞—Ç—å –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Å–ª–æ—è
  const startRenaming = (layer: fabric.Object) => {
    if (!(layer instanceof fabric.Image)) return;
    setRenamingLayer(layer);
    setNewName(layer.name || ""); // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–µ–µ –∏–º—è
  };

  // üîπ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–æ–≤–æ–µ –∏–º—è
  const confirmRename = () => {
    if (renamingLayer && newName.trim()) {
      renamingLayer.set("name", newName.trim());
      setRenamingLayer(null);
      setLayers([...layers]); // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–ª–æ–µ–≤
      canvas?.renderAll();
    }
  };

  return (
    <Paper
      elevation={3}
      sx={{
        width: "100%",
        p: 1,
        bgcolor: "background.paper",
        overflowY: "auto",
        maxHeight: "100%",
      }}
    >
      <Typography variant="subtitle2" sx={{ textAlign: "center", fontSize: "0.8rem", mb: 1 }}>
        üìÇ –°–ª–æ–∏
      </Typography>
      <List sx={{ maxHeight: "100%", overflow: "auto", p: 0 }}>
        {layers.map((layer, index) => (
          <ListItem
            key={index}
            sx={{
              display: "flex",
              alignItems: "center",
              cursor: "pointer",
              bgcolor: layer === selectedObject ? "#292929" : "transparent",
              "&:hover": { bgcolor: "#121212" },
              px: 0.5,
              py: 0.3,
            }}
          >
            {/* üîπ –ö–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è —Å–ª–æ–µ–≤ (–≤–ª–µ–≤–æ) */}
            <Box sx={{ display: "flex", gap: 0.3, mr: 1 }}>
              <IconButton
                size="small"
                sx={{ p: 0.2 }}
                onClick={() => moveLayer(index, "up")}
                disabled={index === 0}
              >
                <ArrowUpward fontSize="inherit" />
              </IconButton>
              <IconButton
                size="small"
                sx={{ p: 0.2 }}
                onClick={() => moveLayer(index, "down")}
                disabled={index === layers.length - 1}
              >
                <ArrowDownward fontSize="inherit" />
              </IconButton>
            </Box>

            {/* üîπ –ù–∞–∑–≤–∞–Ω–∏–µ —Å–ª–æ—è */}
            {renamingLayer === layer ? (
              <TextField
                variant="standard"
                size="small"
                autoFocus
                value={newName}
                onChange={(e) => setNewName(e.target.value)}
                onBlur={confirmRename}
                onKeyDown={(e) => e.key === "Enter" && confirmRename()}
                sx={{ flex: 1, fontSize: "0.75rem", mr: 1 }}
              />
            ) : (
              <Typography
                variant="body2"
                sx={{
                  flex: 1,
                  whiteSpace: "nowrap",
                  overflow: "hidden",
                  textOverflow: "ellipsis",
                  fontSize: "0.75rem",
                }}
                title={getLayerName(layer)}
              >
                {getLayerName(layer)}
              </Typography>
            )}

            {/* üîπ –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è (—Å–ø—Ä–∞–≤–∞) */}
            {layer instanceof fabric.Image && (
              <IconButton
                size="small"
                sx={{ p: 0.2 }}
                onClick={() => startRenaming(layer)}
              >
                <Edit fontSize="inherit" />
              </IconButton>
            )}
          </ListItem>
        ))}
      </List>
    </Paper>
  );
};

export default LayersPanel;
