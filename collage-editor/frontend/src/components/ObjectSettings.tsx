import { Box, Typography, Slider, IconButton } from "@mui/material";
import { fabric } from "fabric";
import DeleteButton from "./DeleteButton";
import TextSettings from "./TextSettings";
import ImageSettings from "./ImageSettings";
import { Lock, LockOpen } from "@mui/icons-material";
import { useEditorStore } from "../store/useEditorStore";
import { useEffect, useState } from "react";

const ObjectSettings = ({ selectedObject }: { selectedObject: fabric.Object }) => {
  const { canvas } = useEditorStore();
  const [locked, setLocked] = useState(false);
  const [opacity, setOpacity] = useState(1);

  // üß† –ü–æ–¥–≥—Ä—É–∂–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –ø—Ä–∏ –µ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏–∏
  useEffect(() => {
    setLocked((selectedObject as any).locked ?? false);
    setOpacity(selectedObject.opacity ?? 1);
  }, [selectedObject]);

  // üîí –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  const toggleLock = () => {
    const newLocked = !locked;
  
    selectedObject.set({
      selectable: !newLocked,
      evented: !newLocked,
      hasControls: !newLocked,
      hasBorders: !newLocked,
      lockMovementX: newLocked,
      lockMovementY: newLocked,
      lockScalingX: newLocked,
      lockScalingY: newLocked,
      lockRotation: newLocked,
    });
  
    (selectedObject as any).locked = newLocked;
    setLocked(newLocked);
  
    if (canvas) {
      // üîÅ –û–±–Ω–æ–≤–∏–º —Å–ª–æ–∏, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏–ª–∏—Å—å —Å—Ç—Ä–µ–ª–∫–∏ –∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å
      const newLayers = [...canvas.getObjects()].reverse();
      useEditorStore.getState().setLayers(newLayers); // <-- üî• –æ–±–Ω–æ–≤–ª—è–µ–º
      canvas.renderAll();
    }
  };
  

  // üéõ –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
  const handleOpacityChange = (_: Event, value: number | number[]) => {
    const val = Array.isArray(value) ? value[0] : value;
    selectedObject.set("opacity", val);
    setOpacity(val);
    canvas?.renderAll();
  };

  if ((selectedObject as any).locked) {
    return (
      <Box textAlign="center">
        <Typography variant="subtitle2" sx={{ mb: 1 }}>
          üîí –û–±—ä–µ–∫—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
        </Typography>
        <IconButton onClick={toggleLock}>
          <Lock />
        </IconButton>
      </Box>
    );
  }

  return (
    <Box>
      {/* üîí –ó–∞–º–æ–∫ */}
      <Box display="flex" justifyContent="flex-end" mb={1}>
        <IconButton onClick={toggleLock}>
          {locked ? <Lock /> : <LockOpen />}
        </IconButton>
      </Box>

      {/* üéØ –û–±—â–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ */}
      <Typography variant="caption" sx={{ mt: 1 }}>
        –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
      </Typography>
      <Slider
        min={0}
        max={1}
        step={0.01}
        value={opacity}
        onChange={handleOpacityChange}
      />

      {/* üß† –¢–∏–ø-—Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
      {selectedObject instanceof fabric.Textbox && (
        <TextSettings selectedObject={selectedObject} />
      )}
      {selectedObject instanceof fabric.Image && (
        <ImageSettings selectedObject={selectedObject} />
      )}

      <DeleteButton selectedObject={selectedObject} />
    </Box>
  );
};

export default ObjectSettings;