import { Button, Paper } from "@mui/material";
import { useEditorStore } from "../store/useEditorStore";
import { ChangeEvent, useRef } from "react";
import { fabric } from "fabric";

const ToolbarLeft = () => {
  const { canvas } = useEditorStore();
  const fileInputRef = useRef<HTMLInputElement>(null);

  const handleExport = () => {
    if (!canvas) return;
  
    // üìå –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ base64
    const dataURL = canvas.toDataURL({
      format: "png",
      quality: 1.0, // üìå –í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ
    });
  
    try {
      sessionStorage.setItem("previewImage", dataURL);
      window.open("/preview", "_blank"); // üìå –û—Ç–∫—Ä—ã–≤–∞–µ–º `Preview` –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", error);
      alert("–û—à–∏–±–∫–∞: –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.");
    }
  };
  
  
  // üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const handleAddImage = (event: ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (file && canvas) {
      const reader = new FileReader();
      reader.onload = (e) => {
        if (!e.target?.result) return;

        fabric.Image.fromURL(e.target.result as string, (img) => {
          if (!img || !img.width || !img.height) return;

          // üîπ –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –±–æ–ª—å—à–µ 300px –≤ —à–∏—Ä–∏–Ω—É
          let scale = 1;
          if (img.width > 300) {
            scale = 300 / img.width;
          }

          img.set({
            left: canvas.width! / 2,
            top: canvas.height! / 2,
            scaleX: scale,
            scaleY: scale,
            originX: "center",
            originY: "center",
          });

          canvas.add(img);
          canvas.setActiveObject(img);
          canvas.renderAll();
        });
      };
      reader.readAsDataURL(file);
    }
  };

  // üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
  const handleAddText = () => {
    if (!canvas) return;

    const text = new fabric.Textbox("–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç", {
      left: canvas.width! / 2,
      top: canvas.height! / 2,
      fontSize: 24,
      fill: "#000",
      textAlign: "center",
      originX: "center",
      originY: "center",
    });

    canvas.add(text);
    canvas.setActiveObject(text);
    canvas.renderAll();
  };

  return (
    <Paper elevation={3} sx={{ width: 80, bgcolor: "background.paper", p: 2, display: "flex", flexDirection: "column", gap: 2 }}>
      <Button variant="contained" color="primary">‚Ü©Ô∏è</Button> {/* –û—Ç–º–µ–Ω–∏—Ç—å */}
      <Button variant="contained" color="primary">‚Ü™Ô∏è</Button> {/* –í–µ—Ä–Ω—É—Ç—å */}
      <Button variant="contained" color="primary">üé®</Button> {/* –ó–∞–º–µ–Ω–∏—Ç—å —Ñ–æ–Ω */}
      <Button variant="contained" color="primary" onClick={() => fileInputRef.current?.click()}>üñº</Button>
      <input type="file" accept="image/*" ref={fileInputRef} style={{ display: "none" }} onChange={handleAddImage} />
      <Button variant="contained" color="primary" onClick={handleAddText}>üî§</Button>
      <Button variant="contained" color="primary">üíæ</Button> {/* –°–æ—Ö—Ä–∞–Ω–∏—Ç—å */}
      <Button variant="contained" color="primary" onClick={handleExport}>üì§</Button>
    </Paper>
  );
};

export default ToolbarLeft;
