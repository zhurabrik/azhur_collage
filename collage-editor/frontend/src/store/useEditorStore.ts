import { create } from "zustand";
import { fabric } from "fabric";

interface EditorStore {
  canvas: fabric.Canvas | null;
  layers: fabric.Object[];
  selectedObject: fabric.Object | null; // ‚úÖ –í—ã–¥–µ–ª–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
  setCanvas: (canvas: fabric.Canvas | null) => void;
  setLayers: (layers: fabric.Object[]) => void;
  setSelectedObject: (object: fabric.Object | null) => void; // ‚úÖ –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
}

export const useEditorStore = create<EditorStore>((set) => ({
  canvas: null,
  layers: [],
  selectedObject: null, // ‚úÖ –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–¥–µ–ª–µ–Ω–æ
  setCanvas: (canvas) => {
    console.log("üîÑ setCanvas: ", canvas);
    set({ canvas });

    if (canvas) {
      // ‚úÖ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–ª–æ–µ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –Ω–∞ —Ö–æ–ª—Å—Ç–µ
      const updateLayers = () => set({ layers: [...canvas.getObjects()].reverse() });

      canvas.on("object:added", updateLayers);
      canvas.on("object:removed", updateLayers);
      canvas.on("object:modified", updateLayers);

      // ‚úÖ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
      canvas.on("selection:created", (e) => set({ selectedObject: e.selected?.[0] || null }));
      canvas.on("selection:updated", (e) => set({ selectedObject: e.selected?.[0] || null }));
      canvas.on("selection:cleared", () => set({ selectedObject: null }));
    }
  },
  setLayers: (layers) => {
    console.log("üìÇ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ª–æ–µ–≤: ", layers);
    set({ layers });
  },
  setSelectedObject: (object) => {
    console.log("üîç –í—ã–¥–µ–ª–µ–Ω –æ–±—ä–µ–∫—Ç: ", object);
    set({ selectedObject: object });
  },
}));
